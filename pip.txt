# pip install packages


pip install django
pip install djangorestframework


#  Run the following command to create a new Django project named gamesapi
django-admin.py startproject gamesapi


#  run the following command to create a new Django app named games within the gamesapi Django project.
python manage.py startapp games



(django1) Anthonys-MacBook-Pro:gamesapi anthonymcclay$ python manage.py makemigrations games
Migrations for 'games':
  games/migrations/0001_initial.py
    - Create model Game


python manage.py migrate


(django1) Anthonys-MacBook-Pro:gamesapi anthonymcclay$ python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, games, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying games.0001_initial... OK
  Applying sessions.0001_initial... OK
(django1) Anthonys-MacBook-Pro:gamesapi anthonymcclay$


(django1) Anthonys-MacBook-Pro:gamesapi anthonymcclay$ sqlite3 db.sqlite3 '.tables'
auth_group                  django_admin_log
auth_group_permissions      django_content_type
auth_permission             django_migrations
auth_user                   django_session
auth_user_groups            games_game
auth_user_user_permissions
(django1) Anthonys-MacBook-Pro:gamesapi anthonymcclay$ sqlite3 db.sqlite3 '.schema games_game'
CREATE TABLE "games_game" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "created" datetime NOT NULL, "name" varchar(200) NOT NULL, "release_date" datetime NOT NULL, "game_category" varchar(200) NOT NULL, "played" bool NOT NULL);
(django1) Anthonys-MacBook-Pro:gamesapi anthonymcclay$


(django1) Anthonys-MacBook-Pro:gamesapi anthonymcclay$ sqlite3 db.sqlite3 'SELECT * FROM games_game ORDER BY name;'

python manage.py shell


from datetime import datetime
from django.utils import timezone
from django.utils.six import BytesIO
from rest_framework.renderers import JSONRenderer
from rest_framework.parsers import JSONParser
from games.models import Game
from games.serializers import GameSerializer


gamedatetime = timezone.make_aware(datetime.now(), timezone.get_current_timezone())
game1 = Game(name='Avengers', release_date=gamedatetime, game_category='2D mobile arcade', played=False)
game1.save()
game2 = Game(name='Angry Birds RPG', release_date=gamedatetime, game_category='3D RPG', played=False)
game2.save()



>>> game_serializer1 = GameSerializer(game1)
>>> print(game_serializer1.data)
{'pk': 1, 'played': False, 'game_category': '2D mobile arcade', 'name': 'Smurfs Jungle', 'release_date': '2017-06-11T05:55:21.008541Z'}

>>> game_serializer2 = GameSerializer(game2)
>>> print(game_serializer2.data)
{'pk': 2, 'played': False, 'game_category': '3D RPG', 'name': 'Angry Birds RPG', 'release_date': '2017-06-11T05:55:21.008541Z'}
>>>


>>> renderer = JSONRenderer()
>>> rendered_game1 = renderer.render(game_serializer1.data)
>>> rendered_game2 = renderer.render(game_serializer2.data)
>>> print(rendered_game1)
b'{"pk":1,"name":"Smurfs Jungle","release_date":"2017-06-11T05:55:21.008541Z","game_category":"2D mobile arcade","played":false}'
>>> print(rendered_game2)
b'{"pk":2,"name":"Angry Birds RPG","release_date":"2017-06-11T05:55:21.008541Z","game_category":"3D RPG","played":false}'
>>>



json_string_for_new_game = '{"name":"Tomb Raider Extreme Edition","release_date":"2016-05-18T03:02:00.776594Z","game_category":"3D RPG","played":false}'
json_bytes_for_new_game = bytes(json_string_for_new_game , encoding="UTF-8")
stream_for_new_game = BytesIO(json_bytes_for_new_game)
parser = JSONParser()
parsed_new_game = parser.parse(stream_for_new_game)
print(parsed_new_game)


stream_for_new_game = BytesIO(json_bytes_for_new_game)
parser = JSONParser()
parsed_new_game = parser.parse(stream_for_new_game)
print(parsed_new_game)



>>> json_string_for_new_game = '{"name":"Tomb Raider Extreme Edition","release_date":"2016-05-18T03:02:00.776594Z","game_category":"3D RPG","played":false}'
>>> json_bytes_for_new_game = bytes(json_string_for_new_game , encoding="UTF-8")
>>>
>>> stream_for_new_game = BytesIO(json_bytes_for_new_game)
>>> parser = JSONParser()
>>> parsed_new_game = parser.parse(stream_for_new_game)
>>> print(parsed_new_game)
{'release_date': '2016-05-18T03:02:00.776594Z', 'game_category': '3D RPG', 'name': 'Tomb Raider Extreme Edition', 'played': False}
>>>




>>> new_game_serializer = GameSerializer(data=parsed_new_game)
>>> if new_game_serializer.is_valid():
...     new_game = new_game_serializer.save()
...     print(new_game.name)
...
Tomb Raider Extreme Edition
>>>



http POST :8000/games/ name='PvZ 3' game_category='2D mobile arcade' played=false release_date='2016-05-18T03:02:00.776594Z'

curl -iX POST -H "Content-Type: application/json" -d '{"name":"PvZ 3", "game_category":"2D mobile arcade", "played": "false", "release_date": "2016-05-18T03:02:00.776594Z"}' :8000/games/


{
    "name": "PvZ 3",
    "game_category": "2D mobile arcade",
    "played": false,
    "release_date": "2016-05-18T03:02:00.776594Z"
}


http PUT :8000/games/4/ name='PvZ 3' game_category='2D mobile arcade' played=true release_date='2016-05-20T03:02:00.776594Z'

(django1) Anthonys-MacBook-Pro:gamesapi anthonymcclay$ http PUT :8000/games/4/ name='PvZ 3' game_category='2D mobile arcade' played=true release_date='2016-05-20T03:02:00.776594Z'
HTTP/1.0 200 OK
Content-Length: 117
Content-Type: application/json
Date: Mon, 12 Jun 2017 00:23:30 GMT
Server: WSGIServer/0.2 CPython/3.5.2
X-Frame-Options: SAMEORIGIN

{
    "game_category": "2D mobile arcade",
    "name": "PvZ 3",
    "pk": 4,
    "played": true,
    "release_date": "2016-05-20T03:02:00.776594Z"
}



http PUT :8000/games/4/ name='PvZ 4'

(django1) Anthonys-MacBook-Pro:gamesapi anthonymcclay$ http PUT :8000/games/4/ name='PvZ 4'
HTTP/1.0 400 Bad Request
Content-Length: 88
Content-Type: application/json
Date: Mon, 12 Jun 2017 00:26:37 GMT
Server: WSGIServer/0.2 CPython/3.5.2
X-Frame-Options: SAMEORIGIN

{
    "game_category": [
        "This field is required."
    ],
    "release_date": [
        "This field is required."
    ]
}

(django1) Anthonys-MacBook-Pro:gamesapi anthonymcclay$


http DELETE :8000/games/4/





/mcclayac/pythoncode/Django1/gamesapi

cd /mcclayac/pythoncode/Django1/gamesapi
python manage.py runserver 0.0.0.0:8000






(django1) Anthonys-MacBook-Pro:gamesapi anthonymcclay$ python manage.py shell
Python 3.5.2 (v3.5.2:4def2a2901a5, Jun 26 2016, 10:47:25)
[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>>
>>>
>>> from datetime import datetime
>>> from django.utils import timezone
>>> from django.utils.six import BytesIO
>>> from rest_framework.renderers import JSONRenderer
>>> from rest_framework.parsers import JSONParser
>>> from games.models import Game
>>> from games.serializers import GameSerializer
>>>
>>>
>>> gamedatetime = timezone.make_aware(datetime.now(), timezone.get_current_timezone())
>>> game1 = Game(name='Avengers', release_date=gamedatetime, game_category='2D mobile arcade', played=False)
>>> game1.save()
>>> game_serializer1 = GameSerializer(game1)
>>> print(game_serializer1.data)
{'name': 'Avengers', 'played': False, 'id': 10, 'game_category': '2D mobile arcade', 'release_date': '2017-06-12T06:39:08.219190Z'}
>>> renderer = JSONRenderer()
>>> rendered_game1 = renderer.render(game_serializer1.data)
>>> print(rendered_game1)
b'{"id":10,"name":"Avengers","release_date":"2017-06-12T06:39:08.219190Z","game_category":"2D mobile arcade","played":false}'
>>>


http OPTIONS :8000/games/


http -f POST :8000/games/ name='Toy Story 4' game_category='3D RPG' played=false release_date='2016-05-18T03:02:00.776594Z'


curl -iX POST -d '{"name":"Toy Story 4", "game_category":"3D RPG", "played":
    "false", "release_date": "2016-05-18T03:02:00.776594Z"}' :8000/games/


curl -iX POST -d '{"name":"Black Panther", "game_category":"3D RPG", "played":"false", "release_date": "2016-05-18T03:02:00.776594Z"}' :8000/games/

(django1) Anthonys-MacBook-Pro:Django1 anthonymcclay$
http -f POST :8000/games/ name='The Hulk' game_category='3D RPG' played=false release_date='2016-05-18T03:02:00.776594Z'

{
    "name": "Chuzzle 2",
    "release_date": "2016-05-18T03:02:00.776594Z",
    "game_category": "2D mobile",
    "played": false
}


{
    "name": "Black Widow",
    "release_date": "2016-05-18T03:02:00.776594Z",
    "game_category": "2D mobile",
    "played": false
}


pip install psycopg2
python manage.py makemigrations games


(django1) Anthonys-MacBook-Pro:gamesapi anthonymcclay$ python manage.py makemigrations games
Migrations for 'games':
  games/migrations/0002_auto_20170612_0845.py
    - Create model GameCategory
    - Create model Player
    - Create model PlayerScore
    - Alter field game_category on game
    - Alter field name on game
    - Add field game to playerscore
    - Add field player to playerscore


django1) Anthonys-MacBook-Pro:gamesapi anthonymcclay$ python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, games, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying games.0001_initial... OK
  Applying games.0002_auto_20170612_0845... OK
  Applying sessions.0001_initial... OK
(django1) Anthonys-MacBook-Pro:gamesapi anthonymcclay$


psql --username=user_name --dbname=games --command="\dt"

(django1) Anthonys-MacBook-Pro:Django1 anthonymcclay$

Password for user django:
                  List of relations
 Schema |            Name            | Type  | Owner
--------+----------------------------+-------+--------
 public | auth_group                 | table | django
 public | auth_group_permissions     | table | django
 public | auth_permission            | table | django
 public | auth_user                  | table | django
 public | auth_user_groups           | table | django
 public | auth_user_user_permissions | table | django
 public | django_admin_log           | table | django
 public | django_content_type        | table | django
 public | django_migrations          | table | django
 public | django_session             | table | django
 public | games_game                 | table | django
 public | games_gamecategory         | table | django
 public | games_player               | table | django
 public | games_playerscore          | table | django
(14 rows)

(django1) Anthonys-MacBook-Pro:Django1 anthonymcclay$




pip install psycopg2

python manage.py makemigrations games

python manage.py migrate



#Game Category
http POST :8000/game-categories/ name='5D mobile arcade'
curl -iX POST -H "Content-Type: application/json" -d '{"name":"2D mobile arcade"}' :8000/game-categories/


http POST :8000/game-categories/ name='2D mobile arcade'
curl -iX POST -H "Content-Type: application/json" -d '{"name":"2D mobile arcade"}' :8000/game-categories/

#Games
http POST :8000/games/ name='PvZ Garden Warfare 4' game_category='3D RPG' played=false release_date='2016-06-21T03:02:00.776594Z'
http POST :8000/games/ name='Superman vs Aquaman' game_category='3D RPG' played=false release_date='2016-06-21T03:02:00.776594Z'

curl -iX POST -H "Content-Type: application/json" -d '{"name":"PvZ Garden Warfare 4", "game_category":"3D RPG", "played": "false", "release_date": "2016-06-21T03:02:00.776594Z"}' :8000/games/
curl -iX POST -H "Content-Type: application/json" -d '{"name":" Superman vs Aquaman", "game_category":"3D RPG", "played": "false", "release_date": "2016-06-21T03:02:00.776594Z"}' :8000/games/


http POST :8000/games/ name='Godzilla' game_category='3D RPG' played=false release_date='2016-06-21T03:02:00.776594Z'
http POST :8000/games/ name='Gamera' game_category='3D RPG' played=false release_date='2016-06-21T03:02:00.776594Z'

http POST :8000/games/ name='Ulta Man' game_category='3D RPG' played=false release_date='2016-06-21T03:02:00.776594Z'
http POST :8000/games/ name='Voltron' game_category='3D RPG' played=false release_date='2016-06-21T03:02:00.776594Z'


http POST :8000/games/ name='Tetris Reloaded' game_category='2D mobile arcade' played=false release_date='2016-06-21T03:02:00.776594Z'
http POST :8000/games/ name='Puzzle Craft' game_category='2D mobile arcade' played=false release_date='2016-06-21T03:02:00.776594Z'
http POST :8000/games/ name='Blek' game_category='2D mobile arcade' played=false release_date='2016-06-21T03:02:00.776594Z'
http POST :8000/games/ name='Scribblenauts Unlimited' game_category='2D mobile arcade' played=false release_date='2016-06-21T03:02:00.776594Z'
http POST :8000/games/ name='Cut the Rope: Magic' game_category='2D mobile arcade' played=false release_date='2016-06-21T03:02:00.776594Z'
http POST :8000/games/ name='Tiny Dice Dungeon' game_category='2D mobile arcade' played=false release_date='2016-06-21T03:02:00.776594Z'
http POST :8000/games/ name='A Dark Room' game_category='2D mobile arcade' played=false release_date='2016-06-21T03:02:00.776594Z'
http POST :8000/games/ name='Bastion' game_category='2D mobile arcade' played=false release_date='2016-06-21T03:02:00.776594Z'
http POST :8000/games/ name='Welcome to the Dungeon' game_category='2D mobile arcade' played=false release_date='2016-06-21T03:02:00.776594Z'
http POST :8000/games/ name='Dust: An Elysian Tail' game_category='2D mobile arcade' played=false release_date='2016-06-21T03:02:00.776594Z'



http POST :8000/games/ name='Captain America vs Thor' game_category='Virtual reality' played=false release_date='2016-06-21T03:02:00.776594Z'
curl -iX POST -H "Content-Type: application/json" -d '{"name":"'Captain America vs Thor", "game_category":"Virtual reality", "played": "false", "release_date": "2016-06-21T03:02:00.776594Z"}' :8000/games/

#Players
http POST :8000/players/ name='Brandon' gender='M'
http POST :8000/players/ name='Kevin' gender='M'

curl -iX POST -H "Content-Type: application/json" -d '{"name":"Brandon", "gender":"M"}' :8000/players/
curl -iX POST -H "Content-Type: application/json" -d '{"name":" Kevin", "gender":"M"}' :8000/players/


# Score
http POST :8000/player-scores/ score=35000 score_date='2016-06-21T03:02:00.776594Z' player='Brandon' game='PvZ Garden Warfare 4'
http POST :8000/player-scores/ score=85125 score_date='2016-06-22T01:02:00.776594Z' player='Brandon' game='PvZ Garden Warfare 4'
http POST :8000/player-scores/ score=123200 score_date='2016-06-22T03:02:00.776594Z' player='Kevin' game='Superman vs Aquaman'
http POST :8000/player-scores/ score=11200 score_date='2016-06-22T05:02:00.776594Z' player='Kevin' game='PvZ Garden Warfare 4'

url -iX POST -H "Content-Type: application/json" -d '{"score":"35000", "score_date":"2016-06-21T03:02:00.776594Z", "player":"Brandon", "game":"PvZ Garden Warfare 4"}' :8000/player-scores/
curl -iX POST -H "Content-Type: application/json" -d '{"score":"85125", "score_date":"2016-06-22T01:02:00.776594Z", "player":"Brandon", "game":"PvZ Garden Warfare 4"}' :8000/player-scores/
curl -iX POST -H "Content-Type: application/json" -d '{"score":"123200", "score_date":"2016-06-22T03:02:00.776594Z", "player":"Kevin", "game":"'Superman vs Aquaman"}' :8000/player-scores/
curl -iX POST -H "Content-Type: application/json" -d '{"score":"11200", "score_date":"2016-06-22T05:02:00.776594Z", "player":"Kevin", "game":"PvZ Garden Warfare 4"}' :8000/player-scores/


http :8000/players/2/
curl -iX GET :8000/players/2/



python manage.py makemigrations games
python manage.py migrate



http GET ':8000/games/?offset=0'
curl -iX GET ':8000/games/?limit=5&offset=0'

http GET ':8000/games/?limit=5&offset=5'
curl -iX GET ':8000/games/?limit=5&offset=5'



http GET ':8000/games/?limit=10000'
